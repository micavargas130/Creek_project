name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - production  # También corre tests cuando se pushea a production
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Ejecutar Tests
    runs-on: ubuntu-latest

    steps:
      - name: Clonar Repositorio
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar Dependencias
        run: npm install --legacy-peer-deps

      - name: Configurar Variables de Entorno
        run: echo "MONGO_TEST=${{ secrets.MONGO_TEST }}" >> .env

      - name: Ejecutar Tests
        run: npm test
        continue-on-error: true  # Permite que los tests fallen pero continúe el flujo

  deploy:
    name: Deploy a Vercel
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'  # Solo se ejecuta en push a master

    steps:
      - name: Clonar Repositorio
        uses: actions/checkout@v3

      - name: Instalar Vercel CLI
        run: npm install -g vercel

      - name: Deploy a Producción en Vercel
        run: vercel --prod --yes --token ${{ secrets.VERCEL_TOKEN }}


name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - production
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Ejecutar Tests
    runs-on: ubuntu-latest

    steps:
      - name: Clonar Repositorio
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar Dependencias
        run: npm install --legacy-peer-deps

      - name: Configurar Variables de Entorno
        run: echo "MONGO_TEST=${{ secrets.MONGO_TEST }}" >> .env

      - name: Ejecutar Tests
        run: npm test
        continue-on-error: true

  deploy:
    name: Deploy a Vercel
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Clonar Repositorio
        uses: actions/checkout@v3

      - name: Instalar Vercel CLI
        run: npm install -g vercel

      - name: Deploy a entorno correcto
        run: |
          if [ "${GITHUB_REF##*/}" = "master" ]; then
            echo "Haciendo deploy a producción..."
            vercel --prod --yes --token ${{ secrets.VERCEL_TOKEN }}
          elif [ "${GITHUB_REF##*/}" = "production" ]; then
            echo "Haciendo deploy a entorno de pruebas..."
            vercel --yes --token ${{ secrets.VERCEL_TOKEN }}
          fi
